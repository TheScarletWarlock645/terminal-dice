name: Build Cross-Platform Binaries

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        include:
          - os: ubuntu-latest
            artifact-name: terminal-dice-linux-x64
            binary-extension: ""
            release-name: "Linux x64"
          - os: windows-latest
            artifact-name: terminal-dice-windows-x64
            binary-extension: ".exe"
            release-name: "Windows x64"
          - os: macos-latest
            artifact-name: terminal-dice-macos-arm64
            binary-extension: ""
            release-name: "macOS Apple Silicon"
          - os: macos-13
            artifact-name: terminal-dice-macos-x64
            binary-extension: ""
            release-name: "macOS Intel"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build binary with PyInstaller
      run: |
        pyinstaller --onefile --name=terminal-dice${{ matrix.binary-extension }} --clean dice.py

    - name: Find executable
      id: find-exe
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo "executable-path=dist/terminal-dice.exe" >> $GITHUB_OUTPUT
          echo "release-file=terminal-dice.exe" >> $GITHUB_OUTPUT
        else
          echo "executable-path=dist/terminal-dice" >> $GITHUB_OUTPUT
          echo "release-file=terminal-dice" >> $GITHUB_OUTPUT
        fi

    - name: Create individual release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}-${{ matrix.artifact-name }}
        name: Terminal Dice v${{ github.run_number }} - ${{ matrix.release-name }}
        files: ${{ steps.find-exe.outputs.executable-path }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}